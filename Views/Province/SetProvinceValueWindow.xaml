<Window x:Class="EU4ModUtil.Views.SetProvinceValueWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EU4ModUtil.Views"
        xmlns:enumSpace="clr-namespace:EU4ModUtil.Models.Macros.Provinces"
        xmlns:vm="clr-namespace:EU4ModUtil.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="SetProvinceValueWindow" Height="450" Width="800"
        FontFamily="Garamond" FontSize="16">
    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ColumnTypes">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enumSpace:ProvinceMacroColumnType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ColorChangeTypes">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enumSpace:ColorOperationType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid>

        <Grid.DataContext>
            <vm:SetProvinceValueViewModel/>
        </Grid.DataContext>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <DataGrid Name="provinceDataGrid" Grid.Column="0" AutoGenerateColumns="False" CanUserAddRows="false" ItemsSource="{Binding Path=Provinces, UpdateSourceTrigger=PropertyChanged}" >
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Province" Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Owner" Binding="{Binding Path=Owner, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Path=ProvinceType, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Grid.Column="1" Content="Value" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
        <ComboBox Name="columnTypeBox" Grid.Column="1" Margin="65,12,10,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource ColumnTypes}}" SelectedItem="{Binding ColumnType}" SelectionChanged="UpdateSelected"/>
        <Grid Grid.Column="1" Margin="10,43,10,50">
            <!-- Simple Strings -->
            <Grid Name="stringOptionsTextBox" Visibility="Hidden">
                <TextBox Name="stringOptionsValueBox" HorizontalAlignment="Left" Margin="56,14,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="457" Height="24"/>
                <Label Content="Set To" HorizontalAlignment="Left" Margin="0,10,0,0" VerticalAlignment="Top"/>
            </Grid>
            <!-- Color -->
            <Grid Name="rgbOptionsTextbox" Visibility="Visible">
                <Label Content="R" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top"/>
                <Label Content="G" HorizontalAlignment="Left" Margin="0,58,0,0" VerticalAlignment="Top"/>
                <Label Content="B" HorizontalAlignment="Left" Margin="1,91,0,0" VerticalAlignment="Top"/>
                <TextBox Name="rBox" HorizontalAlignment="Left" Margin="27,27,0,0" TextWrapping="Wrap" Text="{Binding R, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox Name="gBox" HorizontalAlignment="Left" Margin="27,60,0,0" TextWrapping="Wrap" Text="{Binding G, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox Name="bBox" HorizontalAlignment="Left" Margin="27,93,0,0" TextWrapping="Wrap" Text="{Binding B, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <Rectangle HorizontalAlignment="Left" Height="47" Margin="10,133,0,0" Stroke="Gray" Fill="{Binding BGColor, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="67"/>
                <ComboBox Name="rMacroTypeBox" Margin="82,27,157,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource ColorChangeTypes}}" SelectedItem="{Binding ROperation}" SelectionChanged="UpdateR"/>
                <ComboBox Name="gMacroTypeBox" Margin="82,60,157,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource ColorChangeTypes}}" SelectedItem="{Binding GOperation}" SelectionChanged="UpdateG"/>
                <ComboBox Name="bMacroTypeBox" Margin="82,93,157,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource ColorChangeTypes}}" SelectedItem="{Binding BOperation}" SelectionChanged="UpdateB"/>
                <TextBox x:Name="rIncrementBox" HorizontalAlignment="Right" Margin="0,27,102,0" TextWrapping="Wrap" Text="{Binding RIncrement, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox x:Name="gIncrementBox" HorizontalAlignment="Right" Margin="0,60,102,0" TextWrapping="Wrap" Text="{Binding GIncrement, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox x:Name="bIncrementBox" HorizontalAlignment="Right" Margin="0,93,102,0" TextWrapping="Wrap" Text="{Binding BIncrement, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox Name="rIntervalBox" HorizontalAlignment="Right" Margin="0,27,0,0" TextWrapping="Wrap" Text="{Binding RInterval, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox Name="gIntervalBox" HorizontalAlignment="Right" Margin="0,60,0,0" TextWrapping="Wrap" Text="{Binding GInterval, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <TextBox Name="bIntervalBox" HorizontalAlignment="Right" Margin="0,93,0,0" TextWrapping="Wrap" Text="{Binding BInterval, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="50" Height="24"/>
                <Label Content="every" HorizontalAlignment="Left" Margin="411,25,0,0" VerticalAlignment="Top"/>
                <Label Content="every" HorizontalAlignment="Left" Margin="411,58,0,0" VerticalAlignment="Top"/>
                <Label Content="every" HorizontalAlignment="Left" Margin="412,91,0,0" VerticalAlignment="Top"/>
            </Grid>
        </Grid>
        <Button Grid.Column="1" Content="Run" Margin="10,0,367,10" VerticalAlignment="Bottom" Height="29" Click="RunMacro"/>
        <Button Grid.Column="1" Content="Run and Close" Margin="171,0,10,10" VerticalAlignment="Bottom" Height="29" Click="RunMacroAndClose"/>
    </Grid>
</Window>
